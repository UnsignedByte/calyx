import "primitives/core.futil";
import "primitives/memories/comb.futil";
import "primitives/binary_operators.futil";
import "primitives/pipelined.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    a = std_reg(32);
    b = std_reg(32);
    c = std_reg(32);
    d = std_reg(32);
    e = std_reg(32);
    f = std_reg(32);
    g = std_reg(32);
    h = std_reg(32);
    i = std_reg(32);
  }
  wires {
    static<1> group H {
      g.write_en = 1'd1;
      g.in = 32'd2;
    }
    static<24> group static_seq {
      a.write_en = %0 ? 1'd1;
      a.in = %0 ? 32'd2;
      b.write_en = %1 ? 1'd1;
      b.in = %1 ? 32'd2;
      static_par[go] = %[2:23] ? 1'd1;
      h.write_en = %23 ? 1'd1;
      h.in = %23 ? 32'd2;
    }
    static<21> group static_par<"par"=1> {
      static_seq0[go] = %[0:12] ? 1'd1;
      static_seq2[go] = %[0:21] ? 1'd1;
    }
    static<12> group static_seq0 {
      c.write_en = %0 ? 1'd1;
      c.in = %0 ? 32'd2;
      d.write_en = %1 ? 1'd1;
      d.in = %1 ? 32'd2;
      static_seq1[go] = %[2:12] ? 1'd1;
    }
    static<2> group static_seq1 {
      e.write_en = %0 ? 1'd1;
      e.in = %0 ? 32'd2;
      f.write_en = %1 ? 1'd1;
      f.in = %1 ? 32'd2;
    }
    static<21> group static_seq2 {
      g.write_en = %0 ? 1'd1;
      g.in = %0 ? 32'd2;
      H[go] = %[1:21] ? 1'd1;
    }
  }
  control {
    static_seq;
  }
}
