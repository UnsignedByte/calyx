import "primitives/binary_operators.futil";
import "primitives/core.futil";
import "primitives/math.futil";
import "primitives/memories/comb.futil";
import "primitives/memories/seq.futil";

component main() -> () {
  cells {
    @data A0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data A_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data A_int_read0_0 = std_reg(32);
    @data A_read0_0 = std_reg(32);
    @data B0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data B_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data B_int_read0_0 = std_reg(32);
    @data B_read0_0 = std_reg(32);
    @data C0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @data C_i_j_0 = std_reg(32);
    @external @data C_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data C_int_read0_0 = std_reg(32);
    @data C_sh_read0_0 = std_reg(32);
    @data add0 = std_add(4);
    @data add1 = std_add(4);
    @data add2 = std_add(4);
    @data add3 = std_add(32);
    @data add4 = std_add(4);
    @data add5 = std_add(4);
    @data add6 = std_add(4);
    @data add7 = std_add(4);
    @data add8 = std_add(4);
    @data alpha__0 = std_reg(32);
    @external @data alpha_int = seq_mem_d1(32, 1, 1);
    @data beta__0 = std_reg(32);
    @external @data beta_int = seq_mem_d1(32, 1, 1);
    @data bin_read0_0 = std_reg(32);
    @data bin_read1_0 = std_reg(32);
    @data bin_read2_0 = std_reg(32);
    @data const0 = std_const(1, 0);
    @data const1 = std_const(1, 0);
    @data const10 = std_const(4, 0);
    @data const11 = std_const(4, 1);
    @data const12 = std_const(4, 1);
    @data const13 = std_const(4, 1);
    @data const14 = std_const(4, 0);
    @data const15 = std_const(4, 0);
    @data const16 = std_const(4, 1);
    @data const17 = std_const(4, 1);
    @data const2 = std_const(4, 0);
    @data const3 = std_const(4, 0);
    @data const4 = std_const(4, 1);
    @data const5 = std_const(4, 1);
    @data const6 = std_const(4, 0);
    @data const7 = std_const(4, 0);
    @data const8 = std_const(4, 1);
    @data const9 = std_const(4, 0);
    @data i0 = std_reg(4);
    @data i1 = std_reg(4);
    @data i2 = std_reg(4);
    @data j0 = std_reg(4);
    @data j1 = std_reg(4);
    @data j2 = std_reg(4);
    @data j3 = std_reg(4);
    @data k0 = std_reg(4);
    @data mult_pipe0 = std_mult_pipe(32);
    @data mult_pipe1 = std_mult_pipe(32);
    @data mult_pipe2 = std_mult_pipe(32);
    @data red_read00 = std_reg(32);
    @data v_0 = std_reg(32);
    @generated comb_reg = std_reg(32);
    @generated comb_reg0 = std_reg(4);
    @generated comb_reg1 = std_reg(4);
    @generated comb_reg2 = std_reg(4);
    @generated comb_reg3 = std_reg(4);
    @generated comb_reg4 = std_reg(4);
    @generated comb_reg5 = std_reg(4);
    @generated comb_reg6 = std_reg(4);
    @generated comb_reg7 = std_reg(4);
  }
  wires {
    static<1> group beg_spl_let00 {
      alpha_int.addr0 = const0.out;
      alpha_int.content_en = 1'd1;
    }
    static<1> group invoke00 {
      alpha__0.write_en = 1'd1;
      alpha__0.in = alpha_int.read_data;
    }
    static<1> group beg_spl_let10 {
      beta_int.addr0 = const1.out;
      beta_int.content_en = 1'd1;
    }
    static<1> group invoke100 {
      beta__0.write_en = 1'd1;
      beta__0.in = beta_int.read_data;
    }
    static<1> group beg_spl_let40 {
      A_int.addr0 = i1.out;
      A_int.addr1 = j1.out;
      A_int.content_en = 1'd1;
    }
    static<1> group invoke400 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A_int.read_data;
    }
    static<1> group beg_spl_let50 {
      B_int.addr0 = i1.out;
      B_int.addr1 = j1.out;
      B_int.content_en = 1'd1;
    }
    static<1> group invoke60 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B_int.read_data;
    }
    static<1> group invoke50 {
      A0_0.content_en = 1'd1;
      A0_0.write_data = A_int_read0_0.out;
      A0_0.write_en = 1'd1;
      A0_0.addr0 = i1.out;
      A0_0.addr1 = j1.out;
    }
    static<1> group beg_spl_let60 {
      C_int.addr0 = i1.out;
      C_int.addr1 = j1.out;
      C_int.content_en = 1'd1;
    }
    static<1> group invoke80 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C_int.read_data;
    }
    static<1> group invoke70 {
      B0_0.content_en = 1'd1;
      B0_0.write_data = B_int_read0_0.out;
      B0_0.write_en = 1'd1;
      B0_0.addr0 = i1.out;
      B0_0.addr1 = j1.out;
    }
    static<1> group invoke90 {
      C0_0.content_en = 1'd1;
      C0_0.write_data = A_int_read0_0.out;
      C0_0.write_en = 1'd1;
      C0_0.addr0 = i1.out;
      C0_0.addr1 = j1.out;
    }
    static<1> group invoke101 {
      j1.write_en = 1'd1;
      j1.in = add0.out;
      add0.right = const11.out;
      add0.left = j1.out;
    }
    static<1> group invoke300 {
      j1.write_en = 1'd1;
      j1.in = const10.out;
    }
    static<1> group invoke110 {
      i1.write_en = 1'd1;
      i1.in = add0.out;
      add0.right = const11.out;
      add0.left = i1.out;
    }
    static<1> group invoke200 {
      i1.write_en = 1'd1;
      i1.in = const10.out;
    }
    static<1> group invoke140 {
      C0_0.content_en = 1'd1;
      C0_0.addr0 = i1.out;
      C0_0.addr1 = j1.out;
    }
    static<1> group invoke150 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C0_0.read_data;
    }
    static<3> group invoke160 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = beta__0.out;
      mult_pipe0.left = A_int_read0_0.out;
    }
    static<1> group invoke170 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke180 {
      C0_0.content_en = 1'd1;
      C0_0.write_data = A_int_read0_0.out;
      C0_0.write_en = 1'd1;
      C0_0.addr0 = i1.out;
      C0_0.addr1 = j1.out;
    }
    static<1> group invoke190 {
      j1.write_en = 1'd1;
      j1.in = add0.out;
      add0.right = const11.out;
      add0.left = j1.out;
    }
    static<1> group invoke220 {
      A0_0.content_en = 1'd1;
      A0_0.addr0 = i1.out;
      A0_0.addr1 = k0.out;
    }
    static<1> group invoke230 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A0_0.read_data;
    }
    static<1> group invoke240 {
      B0_0.content_en = 1'd1;
      B0_0.addr0 = k0.out;
      B0_0.addr1 = j1.out;
    }
    static<1> group invoke250 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B0_0.read_data;
    }
    static<3> group invoke260 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = A_int_read0_0.out;
      mult_pipe0.left = alpha__0.out;
    }
    static<1> group invoke270 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<3> group invoke280 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = B_int_read0_0.out;
      mult_pipe0.left = A_int_read0_0.out;
    }
    static<1> group invoke290 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke310 {
      C0_0.content_en = 1'd1;
      C0_0.addr0 = i1.out;
      C0_0.addr1 = j1.out;
    }
    static<1> group invoke320 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C0_0.read_data;
    }
    static<2> group no-op {
    }
    static<1> group invoke301 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = A_int_read0_0.out;
    }
    static<1> group invoke330 {
      C0_0.content_en = 1'd1;
      C0_0.write_data = add3.out;
      C0_0.write_en = 1'd1;
      C0_0.addr0 = i1.out;
      C0_0.addr1 = j1.out;
      add3.right = B_int_read0_0.out;
      add3.left = A_int_read0_0.out;
    }
    static<1> group invoke340 {
      k0.write_en = 1'd1;
      k0.in = add0.out;
      add0.right = const11.out;
      add0.left = k0.out;
    }
    static<1> group invoke210 {
      k0.write_en = 1'd1;
      k0.in = const10.out;
    }
    static<1> group invoke350 {
      j1.write_en = 1'd1;
      j1.in = add0.out;
      add0.right = const11.out;
      add0.left = j1.out;
    }
    static<1> group invoke130 {
      j1.write_en = 1'd1;
      j1.in = const10.out;
    }
    static<1> group invoke201 {
      j1.write_en = 1'd1;
      j1.in = const10.out;
    }
    static<1> group invoke360 {
      i1.write_en = 1'd1;
      i1.in = add0.out;
      add0.right = const11.out;
      add0.left = i1.out;
    }
    static<1> group invoke390 {
      C0_0.content_en = 1'd1;
      C0_0.addr0 = i1.out;
      C0_0.addr1 = j1.out;
    }
    static<1> group invoke401 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C0_0.read_data;
    }
    static<1> group upd150 {
      C_int.write_data = A_int_read0_0.out;
      C_int.write_en = 1'd1;
      C_int.addr0 = i1.out;
      C_int.addr1 = j1.out;
      C_int.content_en = 1'd1;
    }
    static<1> group invoke410 {
      j1.write_en = 1'd1;
      j1.in = add0.out;
      add0.right = const11.out;
      add0.left = j1.out;
    }
    static<1> group invoke380 {
      j1.write_en = 1'd1;
      j1.in = const10.out;
    }
    static<1> group invoke420 {
      i1.write_en = 1'd1;
      i1.in = add0.out;
      add0.right = const11.out;
      add0.left = i1.out;
    }
    static<1> group invoke120 {
      i1.write_en = 1'd1;
      i1.in = const10.out;
    }
    static<1> group invoke370 {
      i1.write_en = 1'd1;
      i1.in = const10.out;
    }
  }
  control {
    @static(8635) static seq {
      @promotable(529) @static(529) static par {
        @promotable(2) @static(2) static seq {
          @NODE_ID(3) beg_spl_let00;
          invoke00;
        }
        @promotable(2) @static(2) static seq {
          @NODE_ID(6) beg_spl_let10;
          invoke100;
        }
        @promotable(529) @static(529) static seq {
          invoke200;
          @promotable(528) @static(528) static repeat 8 {
            @promotable(66) @static(66) static seq {
              invoke300;
              @promotable(64) @static(64) static repeat 8 {
                @promotable(8) @static(8) static seq {
                  @NODE_ID(16) beg_spl_let40;
                  invoke400;
                  @promotable(2) @static(2) static par {
                    invoke50;
                    @promotable(2) @static(2) static seq {
                      @NODE_ID(21) beg_spl_let50;
                      invoke60;
                    }
                  }
                  @promotable(2) @static(2) static par {
                    invoke70;
                    @promotable(2) @static(2) static seq {
                      @NODE_ID(26) beg_spl_let60;
                      invoke80;
                    }
                  }
                  invoke90;
                  invoke101;
                }
              }
              invoke110;
            }
          }
        }
      }
      invoke120;
      @promotable(7832) @static(7832) static repeat 8 {
        @promotable(979) @static(979) static seq {
          invoke130;
          @promotable(64) @static(64) static repeat 8 {
            @promotable(8) @static(8) static seq {
              invoke140;
              invoke150;
              invoke160;
              invoke170;
              invoke180;
              invoke190;
            }
          }
          invoke201;
          @promotable(912) @static(912) static repeat 8 {
            @promotable(114) @static(114) static seq {
              invoke210;
              @promotable(112) @static(112) static repeat 8 {
                @promotable(14) @static(14) @promoted static par {
                  @static(14) static seq {
                    @promotable(2) @static(2) static par {
                      @promotable(2) @static(2) static seq {
                        invoke220;
                        invoke230;
                      }
                      @promotable(2) @static(2) static seq {
                        invoke240;
                        invoke250;
                      }
                    }
                    invoke260;
                    invoke270;
                    invoke280;
                    invoke290;
                    invoke301;
                    invoke310;
                    invoke320;
                    invoke330;
                  }
                  @static(3) static seq {
                    no-op;
                    invoke340;
                  }
                }
              }
              invoke350;
            }
          }
          invoke360;
        }
      }
      invoke370;
      @promotable(272) @static(272) static repeat 8 {
        @promotable(34) @static(34) static seq {
          invoke380;
          @promotable(32) @static(32) static repeat 8 {
            @promotable(4) @static(4) static seq {
              invoke390;
              invoke401;
              @NODE_ID(81) upd150;
              invoke410;
            }
          }
          invoke420;
        }
      }
    }
  }
}
