import "primitives/binary_operators.futil";
import "primitives/core.futil";
import "primitives/math.futil";
import "primitives/memories/comb.futil";
import "primitives/memories/seq.futil";

component main() -> () {
  cells {
    @data A0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data A_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data A_int_read0_0 = std_reg(32);
    @data A_read0_0 = std_reg(32);
    @data A_sh_read0_0 = std_reg(32);
    @data B0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data B_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data B_int_read0_0 = std_reg(32);
    @data B_read0_0 = std_reg(32);
    @data B_sh_read0_0 = std_reg(32);
    @data add0 = std_add(4);
    @data add1 = std_add(4);
    @data add2 = std_add(32);
    @data add3 = std_add(32);
    @data add4 = std_add(4);
    @data add5 = std_add(32);
    @data add6 = std_add(4);
    @data add7 = std_add(4);
    @data add8 = std_add(4);
    @data alpha__0 = std_reg(32);
    @external @data alpha_int = seq_mem_d1(32, 1, 1);
    @data beta__0 = std_reg(32);
    @external @data beta_int = seq_mem_d1(32, 1, 1);
    @data bin_read0_0 = std_reg(32);
    @data bin_read1_0 = std_reg(32);
    @data bin_read2_0 = std_reg(32);
    @data bin_read3_0 = std_reg(32);
    @data const0 = std_const(1, 0);
    @data const1 = std_const(1, 0);
    @data const10 = std_const(4, 1);
    @data const11 = std_const(4, 1);
    @data const12 = std_const(4, 0);
    @data const13 = std_const(4, 0);
    @data const14 = std_const(4, 1);
    @data const15 = std_const(4, 1);
    @data const2 = std_const(4, 0);
    @data const3 = std_const(4, 0);
    @data const4 = std_const(4, 1);
    @data const5 = std_const(4, 1);
    @data const6 = std_const(4, 0);
    @data const7 = std_const(32, 0);
    @data const8 = std_const(32, 0);
    @data const9 = std_const(4, 0);
    @data i0 = std_reg(4);
    @data i00 = std_reg(4);
    @data i01 = std_reg(4);
    @data j0 = std_reg(4);
    @data j00 = std_reg(4);
    @data j01 = std_reg(4);
    @data mult_pipe0 = std_mult_pipe(32);
    @data mult_pipe1 = std_mult_pipe(32);
    @data mult_pipe2 = std_mult_pipe(32);
    @data mult_pipe3 = std_mult_pipe(32);
    @data red_read00 = std_reg(32);
    @data red_read10 = std_reg(32);
    @data t1_0 = std_reg(32);
    @data t2_0 = std_reg(32);
    @data tmp0 = seq_mem_d1(32, 8, 4);
    @external @data tmp_int = seq_mem_d1(32, 8, 4);
    @data tmp_int_read0_0 = std_reg(32);
    @data tmp_read0_0 = std_reg(32);
    @data tmp_sh_read0_0 = std_reg(32);
    @data x0 = seq_mem_d1(32, 8, 4);
    @external @data x_int = seq_mem_d1(32, 8, 4);
    @data x_int_read0_0 = std_reg(32);
    @data x_read0_0 = std_reg(32);
    @data x_read1_0 = std_reg(32);
    @data x_sh_read0_0 = std_reg(32);
    @data y0 = seq_mem_d1(32, 8, 4);
    @data y_i_0 = std_reg(32);
    @external @data y_int = seq_mem_d1(32, 8, 4);
    @data y_int_read0_0 = std_reg(32);
    @data y_sh_read0_0 = std_reg(32);
    @generated comb_reg = std_reg(32);
    @generated comb_reg0 = std_reg(32);
    @generated comb_reg1 = std_reg(4);
    @generated comb_reg2 = std_reg(32);
    @generated comb_reg3 = std_reg(4);
    @generated comb_reg4 = std_reg(4);
    @generated comb_reg5 = std_reg(4);
    @generated comb_reg6 = std_reg(4);
    @generated comb_reg7 = std_reg(4);
  }
  wires {
    static<1> group beg_spl_let00 {
      alpha_int.addr0 = const0.out;
      alpha_int.content_en = 1'd1;
    }
    static<1> group invoke00 {
      alpha__0.write_en = 1'd1;
      alpha__0.in = alpha_int.read_data;
    }
    static<1> group beg_spl_let10 {
      beta_int.addr0 = const1.out;
      beta_int.content_en = 1'd1;
    }
    static<1> group invoke100 {
      beta__0.write_en = 1'd1;
      beta__0.in = beta_int.read_data;
    }
    static<1> group beg_spl_let30 {
      tmp_int.addr0 = i0.out;
      tmp_int.content_en = 1'd1;
    }
    static<1> group invoke300 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp_int.read_data;
    }
    static<1> group beg_spl_let40 {
      x_int.addr0 = i0.out;
      x_int.content_en = 1'd1;
    }
    static<1> group invoke500 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = x_int.read_data;
    }
    static<1> group invoke400 {
      tmp0.content_en = 1'd1;
      tmp0.write_data = A_int_read0_0.out;
      tmp0.write_en = 1'd1;
      tmp0.addr0 = i0.out;
    }
    static<1> group beg_spl_let50 {
      y_int.addr0 = i0.out;
      y_int.content_en = 1'd1;
    }
    static<1> group invoke70 {
      t1_0.write_en = 1'd1;
      t1_0.in = y_int.read_data;
    }
    static<1> group invoke600 {
      x0.content_en = 1'd1;
      x0.write_data = B_int_read0_0.out;
      x0.write_en = 1'd1;
      x0.addr0 = i0.out;
    }
    static<1> group beg_spl_let70 {
      A_int.addr0 = i0.out;
      A_int.addr1 = j0.out;
      A_int.content_en = 1'd1;
    }
    static<1> group invoke101 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A_int.read_data;
    }
    static<1> group beg_spl_let80 {
      B_int.addr0 = i0.out;
      B_int.addr1 = j0.out;
      B_int.content_en = 1'd1;
    }
    static<1> group invoke120 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B_int.read_data;
    }
    static<1> group invoke110 {
      A0_0.content_en = 1'd1;
      A0_0.write_data = A_int_read0_0.out;
      A0_0.write_en = 1'd1;
      A0_0.addr0 = i0.out;
      A0_0.addr1 = j0.out;
    }
    static<1> group invoke130 {
      B0_0.content_en = 1'd1;
      B0_0.write_data = B_int_read0_0.out;
      B0_0.write_en = 1'd1;
      B0_0.addr0 = i0.out;
      B0_0.addr1 = j0.out;
    }
    static<1> group invoke140 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke90 {
      j0.write_en = 1'd1;
      j0.in = const12.out;
    }
    static<1> group invoke80 {
      y0.content_en = 1'd1;
      y0.write_data = t1_0.out;
      y0.write_en = 1'd1;
      y0.addr0 = i0.out;
    }
    static<1> group invoke150 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group invoke200 {
      i0.write_en = 1'd1;
      i0.in = const12.out;
    }
    static<1> group invoke170 {
      tmp0.content_en = 1'd1;
      tmp0.write_data = const7.out;
      tmp0.write_en = 1'd1;
      tmp0.addr0 = i0.out;
    }
    static<1> group invoke180 {
      y0.content_en = 1'd1;
      y0.write_data = const8.out;
      y0.write_en = 1'd1;
      y0.addr0 = i0.out;
    }
    static<1> group invoke201 {
      A0_0.content_en = 1'd1;
      A0_0.addr0 = i0.out;
      A0_0.addr1 = j0.out;
    }
    static<1> group invoke210 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A0_0.read_data;
    }
    static<1> group invoke220 {
      x0.content_en = 1'd1;
      x0.addr0 = j0.out;
    }
    static<1> group invoke230 {
      t2_0.write_en = 1'd1;
      t2_0.in = x0.read_data;
    }
    static<3> group invoke240 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = t2_0.out;
      mult_pipe0.left = A_int_read0_0.out;
    }
    static<1> group invoke250 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke260 {
      t1_0.write_en = 1'd1;
      t1_0.in = A_int_read0_0.out;
    }
    static<1> group invoke270 {
      B0_0.content_en = 1'd1;
      B0_0.addr0 = i0.out;
      B0_0.addr1 = j0.out;
    }
    static<1> group invoke280 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B0_0.read_data;
    }
    static<1> group invoke290 {
      x0.content_en = 1'd1;
      x0.addr0 = j0.out;
    }
    static<1> group invoke301 {
      x_read1_0.write_en = 1'd1;
      x_read1_0.in = x0.read_data;
    }
    static<3> group invoke310 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = x_read1_0.out;
      mult_pipe0.left = B_int_read0_0.out;
    }
    static<1> group invoke320 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke340 {
      tmp0.content_en = 1'd1;
      tmp0.addr0 = i0.out;
    }
    static<1> group invoke350 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp0.read_data;
    }
    static<1> group invoke360 {
      tmp0.content_en = 1'd1;
      tmp0.write_data = add2.out;
      tmp0.write_en = 1'd1;
      tmp0.addr0 = i0.out;
      add2.right = t1_0.out;
      add2.left = A_int_read0_0.out;
    }
    static<1> group invoke370 {
      y0.content_en = 1'd1;
      y0.addr0 = i0.out;
    }
    static<1> group invoke380 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = y0.read_data;
    }
    static<1> group invoke390 {
      y0.content_en = 1'd1;
      y0.write_data = add3.out;
      y0.write_en = 1'd1;
      y0.addr0 = i0.out;
      add3.right = t2_0.out;
      add3.left = B_int_read0_0.out;
    }
    static<7> group no-op {
    }
    static<1> group invoke330 {
      t2_0.write_en = 1'd1;
      t2_0.in = A_int_read0_0.out;
    }
    static<1> group invoke401 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke410 {
      y0.content_en = 1'd1;
      y0.addr0 = i0.out;
    }
    static<1> group invoke420 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = y0.read_data;
    }
    static<1> group invoke430 {
      tmp0.content_en = 1'd1;
      tmp0.addr0 = i0.out;
    }
    static<1> group invoke440 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp0.read_data;
    }
    static<3> group invoke450 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = A_int_read0_0.out;
      mult_pipe0.left = alpha__0.out;
    }
    static<1> group invoke460 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<3> group invoke470 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = B_int_read0_0.out;
      mult_pipe0.left = beta__0.out;
    }
    static<1> group invoke480 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = mult_pipe0.out;
    }
    static<120> group no-op0 {
    }
    static<1> group invoke490 {
      y0.content_en = 1'd1;
      y0.write_data = add2.out;
      y0.write_en = 1'd1;
      y0.addr0 = i0.out;
      add2.right = B_int_read0_0.out;
      add2.left = A_int_read0_0.out;
    }
    static<1> group invoke501 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group invoke190 {
      j0.write_en = 1'd1;
      j0.in = const12.out;
    }
    static<1> group invoke520 {
      tmp0.content_en = 1'd1;
      tmp0.addr0 = i0.out;
    }
    static<1> group invoke530 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp0.read_data;
    }
    static<1> group invoke540 {
      x0.content_en = 1'd1;
      x0.addr0 = i0.out;
    }
    static<1> group invoke550 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = x0.read_data;
    }
    static<1> group upd210 {
      tmp_int.write_data = A_int_read0_0.out;
      tmp_int.write_en = 1'd1;
      tmp_int.addr0 = i0.out;
      tmp_int.content_en = 1'd1;
    }
    static<1> group invoke560 {
      y0.content_en = 1'd1;
      y0.addr0 = i0.out;
    }
    static<1> group invoke570 {
      alpha__0.write_en = 1'd1;
      alpha__0.in = y0.read_data;
    }
    static<1> group upd230 {
      x_int.write_data = B_int_read0_0.out;
      x_int.write_en = 1'd1;
      x_int.addr0 = i0.out;
      x_int.content_en = 1'd1;
    }
    static<1> group invoke590 {
      A0_0.content_en = 1'd1;
      A0_0.addr0 = i0.out;
      A0_0.addr1 = j0.out;
    }
    static<1> group invoke601 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A0_0.read_data;
    }
    static<1> group invoke610 {
      B0_0.content_en = 1'd1;
      B0_0.addr0 = i0.out;
      B0_0.addr1 = j0.out;
    }
    static<1> group invoke620 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B0_0.read_data;
    }
    static<1> group upd270 {
      A_int.write_data = A_int_read0_0.out;
      A_int.write_en = 1'd1;
      A_int.addr0 = i0.out;
      A_int.addr1 = j0.out;
      A_int.content_en = 1'd1;
    }
    static<1> group upd290 {
      B_int.write_data = B_int_read0_0.out;
      B_int.write_en = 1'd1;
      B_int.addr0 = i0.out;
      B_int.addr1 = j0.out;
      B_int.content_en = 1'd1;
    }
    static<1> group invoke630 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke580 {
      j0.write_en = 1'd1;
      j0.in = const12.out;
    }
    static<1> group upd250 {
      y_int.write_data = alpha__0.out;
      y_int.write_en = 1'd1;
      y_int.addr0 = i0.out;
      y_int.content_en = 1'd1;
    }
    static<1> group invoke640 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group invoke160 {
      i0.write_en = 1'd1;
      i0.in = const12.out;
    }
    static<1> group invoke510 {
      i0.write_en = 1'd1;
      i0.in = const12.out;
    }
  }
  control {
    @static(1963) static seq {
      @promotable(449) @static(449) static par {
        @promotable(2) @static(2) static seq {
          @NODE_ID(3) @promotable beg_spl_let00;
          @promotable invoke00;
        }
        @promotable(2) @static(2) static seq {
          @NODE_ID(6) @promotable beg_spl_let10;
          @promotable invoke100;
        }
        @promotable(449) @static(449) static seq {
          @promotable invoke200;
          @promotable(448) @static(448) static repeat 8 {
            @promotable(56) @static(56) static seq {
              @NODE_ID(13) @promotable beg_spl_let30;
              @promotable invoke300;
              @promotable(2) @static(2) static par {
                @promotable invoke400;
                @promotable(2) @static(2) static seq {
                  @NODE_ID(18) @promotable beg_spl_let40;
                  @promotable invoke500;
                }
              }
              @promotable(2) @static(2) static par {
                @promotable invoke600;
                @promotable(2) @static(2) static seq {
                  @NODE_ID(23) @promotable beg_spl_let50;
                  @promotable invoke70;
                }
              }
              @promotable(49) @static(49) static par {
                @promotable invoke80;
                @promotable(49) @static(49) static seq {
                  @promotable invoke90;
                  @promotable(48) @static(48) static repeat 8 {
                    @promotable(6) @static(6) static seq {
                      @NODE_ID(32) @promotable beg_spl_let70;
                      @promotable invoke101;
                      @promotable(2) @static(2) static par {
                        @promotable invoke110;
                        @promotable(2) @static(2) static seq {
                          @NODE_ID(37) @promotable beg_spl_let80;
                          @promotable invoke120;
                        }
                      }
                      @promotable invoke130;
                      @promotable invoke140;
                    }
                  }
                }
              }
              @promotable invoke150;
            }
          }
        }
      }
      @promotable invoke160;
      @promotable(1064) @static(1064) static repeat 8 {
        @promotable(133) @static(133) @promoted static par {
          @static(133) static seq {
            @promotable @static static par {
              @promotable invoke170;
              @promotable invoke180;
            }
            @promotable(120) @static(120) static repeat 8 {
              @promotable(15) @static(15) @promoted static par {
                @static(15) static seq {
                  @promotable(2) @static(2) static par {
                    @promotable(2) @static(2) static seq {
                      @promotable invoke201;
                      @promotable invoke210;
                    }
                    @promotable(2) @static(2) static seq {
                      @promotable invoke220;
                      @promotable invoke230;
                    }
                  }
                  @promotable(5) @static(5) static par {
                    @promotable(5) @static(5) static seq {
                      @promotable(3) invoke240;
                      @promotable invoke250;
                      @promotable invoke260;
                    }
                    @promotable(2) @static(2) static seq {
                      @promotable invoke270;
                      @promotable invoke280;
                    }
                    @promotable(2) @static(2) static seq {
                      @promotable invoke290;
                      @promotable invoke301;
                    }
                  }
                  @promotable(3) invoke310;
                  @promotable invoke320;
                  @promotable invoke330;
                  @promotable(3) @static(3) static par {
                    @promotable(3) @static(3) static seq {
                      @promotable invoke340;
                      @promotable invoke350;
                      @promotable invoke360;
                    }
                    @promotable(3) @static(3) static seq {
                      @promotable invoke370;
                      @promotable invoke380;
                      @promotable invoke390;
                    }
                  }
                }
                @static(8) static seq {
                  @promotable(7) no-op;
                  @promotable invoke401;
                }
              }
            }
            @promotable invoke410;
            @promotable invoke420;
            @promotable(3) invoke450;
            @promotable invoke460;
            @promotable(3) invoke470;
            @promotable invoke480;
            @promotable invoke490;
            @promotable invoke501;
          }
          @static(123) static seq {
            @promotable invoke190;
            @promotable(120) no-op0;
            @promotable invoke430;
            @promotable invoke440;
          }
        }
      }
      @promotable invoke510;
      @promotable(448) @static(448) static repeat 8 {
        @promotable(56) @static(56) static seq {
          @promotable invoke520;
          @promotable invoke530;
          @promotable(2) @static(2) static par {
            @NODE_ID(107) @promotable upd210;
            @promotable(2) @static(2) static seq {
              @promotable invoke540;
              @promotable invoke550;
            }
          }
          @promotable(2) @static(2) static par {
            @NODE_ID(112) @promotable upd230;
            @promotable(2) @static(2) static seq {
              @promotable invoke560;
              @promotable invoke570;
            }
          }
          @promotable(49) @static(49) static par {
            @NODE_ID(117) @promotable upd250;
            @promotable(49) @static(49) static seq {
              @promotable invoke580;
              @promotable(48) @static(48) static repeat 8 {
                @promotable(6) @static(6) static seq {
                  @promotable invoke590;
                  @promotable invoke601;
                  @promotable(2) @static(2) static par {
                    @NODE_ID(126) @promotable upd270;
                    @promotable(2) @static(2) static seq {
                      @promotable invoke610;
                      @promotable invoke620;
                    }
                  }
                  @NODE_ID(130) @promotable upd290;
                  @promotable invoke630;
                }
              }
            }
          }
          @promotable invoke640;
        }
      }
    }
  }
}
