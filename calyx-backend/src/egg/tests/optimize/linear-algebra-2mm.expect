import "primitives/binary_operators.futil";
import "primitives/core.futil";
import "primitives/math.futil";
import "primitives/memories/comb.futil";
import "primitives/memories/seq.futil";

component main() -> () {
  cells {
    @data A0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data A_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data A_int_read0_0 = std_reg(32);
    @data A_read0_0 = std_reg(32);
    @data A_sh_read0_0 = std_reg(32);
    @data B0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data B_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data B_int_read0_0 = std_reg(32);
    @data B_read0_0 = std_reg(32);
    @data B_sh_read0_0 = std_reg(32);
    @data C0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data C_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data C_int_read0_0 = std_reg(32);
    @data C_read0_0 = std_reg(32);
    @data C_sh_read0_0 = std_reg(32);
    @data D0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data D_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data D_int_read0_0 = std_reg(32);
    @data D_sh_read0_0 = std_reg(32);
    @data add0 = std_add(4);
    @data add1 = std_add(4);
    @data add10 = std_add(4);
    @data add11 = std_add(4);
    @data add2 = std_add(32);
    @data add3 = std_add(4);
    @data add4 = std_add(4);
    @data add5 = std_add(4);
    @data add6 = std_add(32);
    @data add7 = std_add(4);
    @data add8 = std_add(4);
    @data add9 = std_add(4);
    @external @data alpha_int = seq_mem_d1(32, 1, 1);
    @data alpha_int_read0_0 = std_reg(32);
    @external @data beta_int = seq_mem_d1(32, 1, 1);
    @data beta_int_read0_0 = std_reg(32);
    @data bin_read0_0 = std_reg(32);
    @data bin_read1_0 = std_reg(32);
    @data bin_read2_0 = std_reg(32);
    @data bin_read3_0 = std_reg(32);
    @data const0 = std_const(4, 0);
    @data const1 = std_const(4, 0);
    @data const10 = std_const(4, 1);
    @data const11 = std_const(4, 1);
    @data const12 = std_const(4, 0);
    @data const13 = std_const(4, 0);
    @data const14 = std_const(1, 0);
    @data const15 = std_const(4, 0);
    @data const16 = std_const(4, 1);
    @data const17 = std_const(4, 1);
    @data const18 = std_const(4, 1);
    @data const19 = std_const(4, 0);
    @data const2 = std_const(4, 1);
    @data const20 = std_const(4, 0);
    @data const21 = std_const(4, 1);
    @data const22 = std_const(4, 1);
    @data const3 = std_const(4, 1);
    @data const4 = std_const(4, 0);
    @data const5 = std_const(4, 0);
    @data const6 = std_const(32, 0);
    @data const7 = std_const(4, 0);
    @data const8 = std_const(1, 0);
    @data const9 = std_const(4, 1);
    @data d_tmp_0 = std_reg(32);
    @data i0 = std_reg(4);
    @data i00 = std_reg(4);
    @data i01 = std_reg(4);
    @data i10 = std_reg(4);
    @data j0 = std_reg(4);
    @data j00 = std_reg(4);
    @data j01 = std_reg(4);
    @data j10 = std_reg(4);
    @data k0 = std_reg(4);
    @data k10 = std_reg(4);
    @data mult_pipe0 = std_mult_pipe(32);
    @data mult_pipe1 = std_mult_pipe(32);
    @data mult_pipe2 = std_mult_pipe(32);
    @data mult_pipe3 = std_mult_pipe(32);
    @data red_read00 = std_reg(32);
    @data red_read10 = std_reg(32);
    @data tmp0_0 = seq_mem_d2(32, 8, 8, 4, 4);
    @external @data tmp_int = seq_mem_d2(32, 8, 8, 4, 4);
    @data tmp_int_read0_0 = std_reg(32);
    @data tmp_read0_0 = std_reg(32);
    @data tmp_sh_read0_0 = std_reg(32);
    @data v1_0 = std_reg(32);
    @data v_0 = std_reg(32);
    @generated comb_reg = std_reg(32);
    @generated comb_reg0 = std_reg(4);
    @generated comb_reg1 = std_reg(4);
    @generated comb_reg2 = std_reg(4);
    @generated comb_reg3 = std_reg(32);
    @generated comb_reg4 = std_reg(4);
    @generated comb_reg5 = std_reg(4);
    @generated comb_reg6 = std_reg(4);
    @generated comb_reg7 = std_reg(4);
    @generated comb_reg8 = std_reg(4);
    @generated comb_reg9 = std_reg(4);
    @generated comb_reg10 = std_reg(4);
  }
  wires {
    static<1> group beg_spl_let200 {
      A_int.addr0 = i0.out;
      A_int.addr1 = j0.out;
      A_int.content_en = 1'd1;
    }
    static<1> group invoke200 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A_int.read_data;
    }
    static<1> group beg_spl_let30 {
      B_int.addr0 = i0.out;
      B_int.addr1 = j0.out;
      B_int.content_en = 1'd1;
    }
    static<1> group invoke400 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B_int.read_data;
    }
    static<1> group invoke300 {
      A0_0.content_en = 1'd1;
      A0_0.write_data = A_int_read0_0.out;
      A0_0.write_en = 1'd1;
      A0_0.addr0 = i0.out;
      A0_0.addr1 = j0.out;
    }
    static<1> group beg_spl_let40 {
      C_int.addr0 = i0.out;
      C_int.addr1 = j0.out;
      C_int.content_en = 1'd1;
    }
    static<1> group invoke600 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C_int.read_data;
    }
    static<1> group invoke500 {
      B0_0.content_en = 1'd1;
      B0_0.write_data = B_int_read0_0.out;
      B0_0.write_en = 1'd1;
      B0_0.addr0 = i0.out;
      B0_0.addr1 = j0.out;
    }
    static<1> group beg_spl_let50 {
      D_int.addr0 = i0.out;
      D_int.addr1 = j0.out;
      D_int.content_en = 1'd1;
    }
    static<1> group invoke80 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = D_int.read_data;
    }
    static<1> group invoke70 {
      C0_0.content_en = 1'd1;
      C0_0.write_data = A_int_read0_0.out;
      C0_0.write_en = 1'd1;
      C0_0.addr0 = i0.out;
      C0_0.addr1 = j0.out;
    }
    static<1> group beg_spl_let60 {
      tmp_int.addr0 = i0.out;
      tmp_int.addr1 = j0.out;
      tmp_int.content_en = 1'd1;
    }
    static<1> group invoke100 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp_int.read_data;
    }
    static<1> group invoke90 {
      D0_0.content_en = 1'd1;
      D0_0.write_data = B_int_read0_0.out;
      D0_0.write_en = 1'd1;
      D0_0.addr0 = i0.out;
      D0_0.addr1 = j0.out;
    }
    static<1> group invoke110 {
      tmp0_0.content_en = 1'd1;
      tmp0_0.write_data = A_int_read0_0.out;
      tmp0_0.write_en = 1'd1;
      tmp0_0.addr0 = i0.out;
      tmp0_0.addr1 = j0.out;
    }
    static<1> group invoke120 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke101 {
      j0.write_en = 1'd1;
      j0.in = const0.out;
    }
    static<1> group invoke130 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group beg_spl_let100 {
      alpha_int.addr0 = const14.out;
      alpha_int.content_en = 1'd1;
    }
    static<1> group invoke180 {
      alpha_int_read0_0.write_en = 1'd1;
      alpha_int_read0_0.in = alpha_int.read_data;
    }
    static<1> group invoke190 {
      A0_0.content_en = 1'd1;
      A0_0.addr0 = i0.out;
      A0_0.addr1 = k0.out;
    }
    static<1> group invoke201 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A0_0.read_data;
    }
    static<1> group invoke210 {
      B0_0.content_en = 1'd1;
      B0_0.addr0 = k0.out;
      B0_0.addr1 = j0.out;
    }
    static<1> group invoke220 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B0_0.read_data;
    }
    static<3> group invoke230 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = A_int_read0_0.out;
      mult_pipe0.left = alpha_int_read0_0.out;
    }
    static<1> group invoke240 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<3> group invoke250 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = B_int_read0_0.out;
      mult_pipe0.left = A_int_read0_0.out;
    }
    static<1> group invoke260 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke280 {
      tmp0_0.content_en = 1'd1;
      tmp0_0.addr0 = i0.out;
      tmp0_0.addr1 = j0.out;
    }
    static<1> group invoke290 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp0_0.read_data;
    }
    static<2> group no-op {
    }
    static<1> group invoke270 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = A_int_read0_0.out;
    }
    static<1> group invoke301 {
      tmp0_0.content_en = 1'd1;
      tmp0_0.write_data = add2.out;
      tmp0_0.write_en = 1'd1;
      tmp0_0.addr0 = i0.out;
      tmp0_0.addr1 = j0.out;
      add2.right = B_int_read0_0.out;
      add2.left = A_int_read0_0.out;
    }
    static<1> group invoke310 {
      k0.write_en = 1'd1;
      k0.in = add0.out;
      add0.right = const10.out;
      add0.left = k0.out;
    }
    static<1> group invoke160 {
      tmp0_0.content_en = 1'd1;
      tmp0_0.write_data = const6.out;
      tmp0_0.write_en = 1'd1;
      tmp0_0.addr0 = i0.out;
      tmp0_0.addr1 = j0.out;
    }
    static<1> group invoke320 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke170 {
      k0.write_en = 1'd1;
      k0.in = const0.out;
    }
    static<1> group invoke150 {
      j0.write_en = 1'd1;
      j0.in = const0.out;
    }
    static<1> group invoke330 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group invoke360 {
      D0_0.content_en = 1'd1;
      D0_0.addr0 = i0.out;
      D0_0.addr1 = j0.out;
    }
    static<1> group invoke370 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = D0_0.read_data;
    }
    static<1> group beg_spl_let170 {
      beta_int.addr0 = const14.out;
      beta_int.content_en = 1'd1;
    }
    static<1> group invoke380 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = beta_int.read_data;
    }
    static<3> group invoke390 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = B_int_read0_0.out;
      mult_pipe0.left = A_int_read0_0.out;
    }
    static<1> group invoke401 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke430 {
      tmp0_0.content_en = 1'd1;
      tmp0_0.addr0 = i0.out;
      tmp0_0.addr1 = k0.out;
    }
    static<1> group invoke440 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = tmp0_0.read_data;
    }
    static<1> group invoke450 {
      C0_0.content_en = 1'd1;
      C0_0.addr0 = k0.out;
      C0_0.addr1 = j0.out;
    }
    static<1> group invoke460 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C0_0.read_data;
    }
    static<3> group invoke470 {
      mult_pipe0.go = 1'd1;
      mult_pipe0.right = A_int_read0_0.out;
      mult_pipe0.left = B_int_read0_0.out;
    }
    static<1> group invoke480 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = mult_pipe0.out;
    }
    static<1> group invoke501 {
      D0_0.content_en = 1'd1;
      D0_0.addr0 = i0.out;
      D0_0.addr1 = j0.out;
    }
    static<1> group invoke510 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = D0_0.read_data;
    }
    static<2> group no-op0 {
    }
    static<1> group invoke490 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = A_int_read0_0.out;
    }
    static<1> group invoke520 {
      D0_0.content_en = 1'd1;
      D0_0.write_data = add2.out;
      D0_0.write_en = 1'd1;
      D0_0.addr0 = i0.out;
      D0_0.addr1 = j0.out;
      add2.right = B_int_read0_0.out;
      add2.left = A_int_read0_0.out;
    }
    static<1> group invoke530 {
      k0.write_en = 1'd1;
      k0.in = add0.out;
      add0.right = const10.out;
      add0.left = k0.out;
    }
    static<1> group invoke410 {
      D0_0.content_en = 1'd1;
      D0_0.write_data = A_int_read0_0.out;
      D0_0.write_en = 1'd1;
      D0_0.addr0 = i0.out;
      D0_0.addr1 = j0.out;
    }
    static<1> group invoke540 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke420 {
      k0.write_en = 1'd1;
      k0.in = const0.out;
    }
    static<1> group invoke350 {
      j0.write_en = 1'd1;
      j0.in = const0.out;
    }
    static<1> group invoke550 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group invoke580 {
      A0_0.content_en = 1'd1;
      A0_0.addr0 = i0.out;
      A0_0.addr1 = j0.out;
    }
    static<1> group invoke590 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = A0_0.read_data;
    }
    static<1> group invoke601 {
      B0_0.content_en = 1'd1;
      B0_0.addr0 = i0.out;
      B0_0.addr1 = j0.out;
    }
    static<1> group invoke610 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = B0_0.read_data;
    }
    static<1> group upd230 {
      A_int.write_data = A_int_read0_0.out;
      A_int.write_en = 1'd1;
      A_int.addr0 = i0.out;
      A_int.addr1 = j0.out;
      A_int.content_en = 1'd1;
    }
    static<1> group invoke620 {
      C0_0.content_en = 1'd1;
      C0_0.addr0 = i0.out;
      C0_0.addr1 = j0.out;
    }
    static<1> group invoke630 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = C0_0.read_data;
    }
    static<1> group upd250 {
      B_int.write_data = B_int_read0_0.out;
      B_int.write_en = 1'd1;
      B_int.addr0 = i0.out;
      B_int.addr1 = j0.out;
      B_int.content_en = 1'd1;
    }
    static<1> group invoke640 {
      D0_0.content_en = 1'd1;
      D0_0.addr0 = i0.out;
      D0_0.addr1 = j0.out;
    }
    static<1> group invoke650 {
      B_int_read0_0.write_en = 1'd1;
      B_int_read0_0.in = D0_0.read_data;
    }
    static<1> group upd270 {
      C_int.write_data = A_int_read0_0.out;
      C_int.write_en = 1'd1;
      C_int.addr0 = i0.out;
      C_int.addr1 = j0.out;
      C_int.content_en = 1'd1;
    }
    static<1> group invoke660 {
      tmp0_0.content_en = 1'd1;
      tmp0_0.addr0 = i0.out;
      tmp0_0.addr1 = j0.out;
    }
    static<1> group invoke670 {
      A_int_read0_0.write_en = 1'd1;
      A_int_read0_0.in = tmp0_0.read_data;
    }
    static<1> group upd290 {
      D_int.write_data = B_int_read0_0.out;
      D_int.write_en = 1'd1;
      D_int.addr0 = i0.out;
      D_int.addr1 = j0.out;
      D_int.content_en = 1'd1;
    }
    static<1> group upd310 {
      tmp_int.write_data = A_int_read0_0.out;
      tmp_int.write_en = 1'd1;
      tmp_int.addr0 = i0.out;
      tmp_int.addr1 = j0.out;
      tmp_int.content_en = 1'd1;
    }
    static<1> group invoke680 {
      j0.write_en = 1'd1;
      j0.in = add0.out;
      add0.right = const10.out;
      add0.left = j0.out;
    }
    static<1> group invoke570 {
      j0.write_en = 1'd1;
      j0.in = const0.out;
    }
    static<1> group invoke690 {
      i0.write_en = 1'd1;
      i0.in = add0.out;
      add0.right = const10.out;
      add0.left = i0.out;
    }
    static<1> group invoke00 {
      i0.write_en = 1'd1;
      i0.in = const0.out;
    }
    static<1> group invoke140 {
      i0.write_en = 1'd1;
      i0.in = const0.out;
    }
    static<1> group invoke340 {
      i0.write_en = 1'd1;
      i0.in = const0.out;
    }
    static<1> group invoke560 {
      i0.write_en = 1'd1;
      i0.in = const0.out;
    }
  }
  control {
    @static(14532) static seq {
      @new_fsm seq {
        @promotable invoke00;
        @promotable(784) @static(784) static repeat 8 {
          @promotable(98) @static(98) static seq {
            @promotable invoke101;
            @promotable(96) @static(96) static repeat 8 {
              @promotable(12) @static(12) static seq {
                @new_fsm seq {
                  @NODE_ID(8) @promotable beg_spl_let200;
                  @promotable invoke200;
                  @promotable(2) @static(2) static par {
                    @promotable invoke300;
                    @promotable(2) @static(2) static seq {
                      @NODE_ID(13) @promotable beg_spl_let30;
                      @promotable invoke400;
                    }
                  }
                  @promotable(2) @static(2) static par {
                    @promotable invoke500;
                    @promotable(2) @static(2) static seq {
                      @NODE_ID(18) @promotable beg_spl_let40;
                      @promotable invoke600;
                    }
                  }
                }
                @new_fsm seq {
                  @promotable(2) @static(2) static par {
                    @promotable invoke70;
                    @promotable(2) @static(2) static seq {
                      @NODE_ID(23) @promotable beg_spl_let50;
                      @promotable invoke80;
                    }
                  }
                  @promotable(2) @static(2) static par {
                    @promotable invoke90;
                    @promotable(2) @static(2) static seq {
                      @NODE_ID(28) @promotable beg_spl_let60;
                      @promotable invoke100;
                    }
                  }
                  @promotable invoke110;
                  @promotable invoke120;
                }
              }
            }
            @promotable invoke130;
          }
        }
        @promotable invoke140;
        @promotable(7312) @static(7312) static repeat 8 {
          @promotable(914) @static(914) static seq {
            @promotable invoke150;
            @promotable(912) @static(912) static repeat 8 {
              @promotable(114) @static(114) @promoted static par {
                @static(114) static seq {
                  @promotable invoke160;
                  @promotable(112) @static(112) static repeat 8 {
                    @promotable(14) @static(14) @promoted static par {
                      @static(14) static seq {
                        @promotable(2) @static(2) static par {
                          @promotable(2) @static(2) static seq {
                            @NODE_ID(45) @promotable beg_spl_let100;
                            @promotable invoke180;
                          }
                          @promotable(2) @static(2) static seq {
                            @promotable invoke190;
                            @promotable invoke201;
                          }
                          @promotable(2) @static(2) static seq {
                            @promotable invoke210;
                            @promotable invoke220;
                          }
                        }
                        @promotable(3) invoke230;
                        @promotable invoke240;
                        @promotable(3) invoke250;
                        @promotable invoke260;
                        @promotable invoke270;
                        @promotable invoke280;
                        @promotable invoke290;
                        @promotable invoke301;
                      }
                      @static(3) static seq {
                        @promotable(2) no-op;
                        @promotable invoke310;
                      }
                    }
                  }
                  @promotable invoke320;
                }
                @promotable invoke170;
              }
            }
            @promotable invoke330;
          }
        }
      }
      @new_fsm seq {
        @promotable invoke340;
        @promotable(5648) @static(5648) static repeat 8 {
          @promotable(706) @static(706) static seq {
            @promotable invoke350;
            @promotable(704) @static(704) static repeat 8 {
              @promotable(88) @static(88) @promoted static par {
                @static(88) static seq {
                  @promotable invoke360;
                  @promotable invoke370;
                  @promotable(3) invoke390;
                  @promotable invoke401;
                  @promotable invoke410;
                  @promotable(80) @static(80) static repeat 8 {
                    @promotable(10) @static(10) @promoted static par {
                      @static(10) static seq {
                        @promotable(2) @static(2) static par {
                          @promotable(2) @static(2) static seq {
                            @promotable invoke430;
                            @promotable invoke440;
                          }
                          @promotable(2) @static(2) static seq {
                            @promotable invoke450;
                            @promotable invoke460;
                          }
                        }
                        @promotable(3) invoke470;
                        @promotable invoke480;
                        @promotable invoke490;
                        @promotable invoke501;
                        @promotable invoke510;
                        @promotable invoke520;
                      }
                      @static(3) static seq {
                        @promotable(2) no-op0;
                        @promotable invoke530;
                      }
                    }
                  }
                  @promotable invoke540;
                }
                @promotable(2) @static(2) static seq {
                  @NODE_ID(77) @promotable beg_spl_let170;
                  @promotable invoke380;
                }
                @promotable invoke420;
              }
            }
            @promotable invoke550;
          }
        }
        @promotable invoke560;
        @promotable(784) @static(784) static repeat 8 {
          @promotable(98) @static(98) static seq {
            @promotable invoke570;
            @promotable(96) @static(96) static repeat 8 {
              @promotable(12) @static(12) static seq {
                @new_fsm seq {
                  @promotable invoke580;
                  @promotable invoke590;
                  @promotable(2) @static(2) static par {
                    @NODE_ID(114) @promotable upd230;
                    @promotable(2) @static(2) static seq {
                      @promotable invoke601;
                      @promotable invoke610;
                    }
                  }
                  @promotable(2) @static(2) static par {
                    @NODE_ID(119) @promotable upd250;
                    @promotable(2) @static(2) static seq {
                      @promotable invoke620;
                      @promotable invoke630;
                    }
                  }
                }
                @new_fsm seq {
                  @promotable(2) @static(2) static par {
                    @NODE_ID(124) @promotable upd270;
                    @promotable(2) @static(2) static seq {
                      @promotable invoke640;
                      @promotable invoke650;
                    }
                  }
                  @promotable(2) @static(2) static par {
                    @NODE_ID(129) @promotable upd290;
                    @promotable(2) @static(2) static seq {
                      @promotable invoke660;
                      @promotable invoke670;
                    }
                  }
                  @NODE_ID(133) @promotable upd310;
                  @promotable invoke680;
                }
              }
            }
            @promotable invoke690;
          }
        }
      }
    }
  }
}
