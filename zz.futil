import "primitives/core.futil";
import "primitives/memories/seq.futil";
import "primitives/binary_operators.futil";
component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    res1 = std_reg(32);
    res2 = std_reg(32);
    add1 = std_add(32);
    mult1 = std_mult_pipe(32);
    @external m = seq_mem_d1(32, 1, 1);
  }
  wires {
    static<21> group static_seq {
      res1.write_en = %0 ? 1'd1;
      res1.in = %0 ? add1.out;
      add1.left = %0 ? res1.out;
      add1.right = %0 ? 32'd1;
      static_seq0[go] = %[1:21] ? 1'd1;
    }
    static<4> group static_seq0 {
      res1.write_en = %3 ? 1'd1;
      res1.in = %3 ? mult1.out;
      mult1.go = %[0:3] ? 1'd1;
      mult1.left = %[0:3] ? res1.out;
      mult1.right = %[0:3] ? 32'd2;
    }
  }
  control {
    static_seq;
  }
}
